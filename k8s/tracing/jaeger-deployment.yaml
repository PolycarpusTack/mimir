# Jaeger Distributed Tracing System
---
apiVersion: v1
kind: Namespace
metadata:
  name: mimir-tracing
  labels:
    app.kubernetes.io/name: tracing
    app.kubernetes.io/part-of: mimir
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: tracing
---
# Jaeger Collector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-collector
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: jaeger
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: jaeger-collector
        image: jaegertracing/jaeger-collector:1.50
        imagePullPolicy: IfNotPresent
        args:
        - --config-file=/etc/jaeger/jaeger-collector.yaml
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        - name: ES_SERVER_URLS
          value: "https://elasticsearch.mimir-logging:9200"
        - name: ES_USERNAME
          value: "elastic"
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        - name: ES_TLS_ENABLED
          value: "true"
        - name: ES_TLS_SKIP_HOST_VERIFY
          value: "true"
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        ports:
        - containerPort: 14250
          name: grpc
          protocol: TCP
        - containerPort: 14268
          name: http
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 4317
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        - containerPort: 14269
          name: admin
          protocol: TCP
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /
            port: admin
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: admin
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/jaeger
        - name: tls-config
          mountPath: /etc/ssl/certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: jaeger-collector-config
      - name: tls-config
        secret:
          secretName: jaeger-tls
          optional: true
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
spec:
  type: ClusterIP
  ports:
  - port: 14250
    targetPort: grpc
    protocol: TCP
    name: grpc
  - port: 14268
    targetPort: http
    protocol: TCP
    name: http
  - port: 9411
    targetPort: zipkin
    protocol: TCP
    name: zipkin
  - port: 4317
    targetPort: otlp-grpc
    protocol: TCP
    name: otlp-grpc
  - port: 4318
    targetPort: otlp-http
    protocol: TCP
    name: otlp-http
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
---
# Jaeger Query (UI)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-query
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: query
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16687"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: jaeger
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: jaeger-query
        image: jaegertracing/jaeger-query:1.50
        imagePullPolicy: IfNotPresent
        args:
        - --config-file=/etc/jaeger/jaeger-query.yaml
        env:
        - name: SPAN_STORAGE_TYPE
          value: elasticsearch
        - name: ES_SERVER_URLS
          value: "https://elasticsearch.mimir-logging:9200"
        - name: ES_USERNAME
          value: "elastic"
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        - name: ES_TLS_ENABLED
          value: "true"
        - name: ES_TLS_SKIP_HOST_VERIFY
          value: "true"
        - name: QUERY_BASE_PATH
          value: "/"
        ports:
        - containerPort: 16686
          name: http
          protocol: TCP
        - containerPort: 16687
          name: admin
          protocol: TCP
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        readinessProbe:
          httpGet:
            path: /
            port: admin
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: admin
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /etc/jaeger
      volumes:
      - name: config
        configMap:
          name: jaeger-query-config
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
spec:
  type: ClusterIP
  ports:
  - port: 16686
    targetPort: http
    protocol: TCP
    name: http
  - port: 16687
    targetPort: admin
    protocol: TCP
    name: admin
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
---
# Jaeger Agent (DaemonSet)
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: jaeger-agent
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: agent
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14271"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: jaeger
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        fsGroup: 10001
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.50
        imagePullPolicy: IfNotPresent
        args:
        - --reporter.grpc.host-port=jaeger-collector:14250
        - --reporter.type=grpc
        - --agent.tags=cluster=mimir-prod,region=us-east-1
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 5775
          name: zk-compact-trft
          protocol: UDP
          hostPort: 5775
        - containerPort: 5778
          name: config-rest
          protocol: TCP
          hostPort: 5778
        - containerPort: 6831
          name: jg-compact-trft
          protocol: UDP
          hostPort: 6831
        - containerPort: 6832
          name: jg-binary-trft
          protocol: UDP
          hostPort: 6832
        - containerPort: 14271
          name: admin
          protocol: TCP
          hostPort: 14271
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        readinessProbe:
          httpGet:
            path: /
            port: admin
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: admin
          initialDelaySeconds: 15
          periodSeconds: 10
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
---
# Jaeger Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-query
  namespace: mimir-tracing
  labels:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jaeger.example.com
    secretName: jaeger-tls
  rules:
  - host: jaeger.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686