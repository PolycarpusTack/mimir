# Elasticsearch Deployment for Log Aggregation
---
apiVersion: v1
kind: Namespace
metadata:
  name: mimir-logging
  labels:
    app.kubernetes.io/name: logging
    app.kubernetes.io/part-of: mimir
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: mimir-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: mimir-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
data:
  elasticsearch.yml: |
    cluster.name: mimir-logs
    node.name: ${NODE_NAME}
    
    # Network settings
    network.host: 0.0.0.0
    http.port: 9200
    transport.port: 9300
    
    # Discovery settings
    discovery.seed_hosts:
      - elasticsearch-0.elasticsearch-headless
      - elasticsearch-1.elasticsearch-headless
      - elasticsearch-2.elasticsearch-headless
    cluster.initial_master_nodes:
      - elasticsearch-0
      - elasticsearch-1
      - elasticsearch-2
    
    # Memory settings
    bootstrap.memory_lock: true
    
    # Security settings
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.client_authentication: required
    xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
    xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
    
    # Monitoring
    xpack.monitoring.collection.enabled: true
    
    # Index lifecycle management
    xpack.ilm.enabled: true
    
    # Machine learning
    xpack.ml.enabled: false
    
    # Performance tuning
    indices.memory.index_buffer_size: 20%
    indices.queries.cache.size: 15%
    indices.fielddata.cache.size: 20%
    
    # Slow log
    index.search.slowlog.threshold.query.warn: 10s
    index.search.slowlog.threshold.query.info: 5s
    index.search.slowlog.threshold.query.debug: 2s
    index.search.slowlog.threshold.query.trace: 500ms
    
    index.indexing.slowlog.threshold.index.warn: 10s
    index.indexing.slowlog.threshold.index.info: 5s
    index.indexing.slowlog.threshold.index.debug: 2s
    index.indexing.slowlog.threshold.index.trace: 500ms
  
  jvm.options: |
    -Xms2g
    -Xmx2g
    -XX:+UseG1GC
    -XX:G1ReservePercent=25
    -XX:InitiatingHeapOccupancyPercent=30
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=/usr/share/elasticsearch/data
    -XX:ErrorFile=/usr/share/elasticsearch/logs/hs_err_pid%p.log
    -Xlog:gc*,gc+age=trace,safepoint:file=/usr/share/elasticsearch/logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-credentials
  namespace: mimir-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
type: Opaque
stringData:
  username: elastic
  password: CHANGE_THIS_STRONG_PASSWORD
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: mimir-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  serviceName: elasticsearch-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: logging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9114"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: elasticsearch
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      initContainers:
      - name: sysctl
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
          runAsUser: 0
      - name: create-certs
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
        command:
        - sh
        - -c
        - |
          if [ ! -f /usr/share/elasticsearch/config/elastic-certificates.p12 ]; then
            bin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass ""
          fi
          chown -R 1000:1000 /usr/share/elasticsearch/config
        volumeMounts:
        - name: config
          mountPath: /usr/share/elasticsearch/config
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.name
          value: mimir-logs
        - name: ES_JAVA_OPTS
          value: "-Xms2g -Xmx2g"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        resources:
          requests:
            memory: "3Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        readinessProbe:
          httpGet:
            path: /_cluster/health?local=true
            port: 9200
            scheme: HTTPS
            httpHeaders:
            - name: Authorization
              value: Basic ZWxhc3RpYzpDSEFOR0VfVEhJU19TVFJPTkdfUEFTU1dPUkQ=
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: config
          mountPath: /usr/share/elasticsearch/config/jvm.options
          subPath: jvm.options
        - name: certs
          mountPath: /usr/share/elasticsearch/config/certs
      - name: elasticsearch-exporter
        image: quay.io/prometheuscommunity/elasticsearch-exporter:v1.6.0
        imagePullPolicy: IfNotPresent
        args:
        - --es.uri=https://localhost:9200
        - --es.ssl-skip-verify
        - --es.timeout=20s
        env:
        - name: ES_USERNAME
          value: elastic
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        ports:
        - containerPort: 9114
          name: metrics
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: config
        configMap:
          name: elasticsearch-config
      - name: certs
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: logging
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
  namespace: mimir-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - port: 9200
    targetPort: 9200
    protocol: TCP
    name: http
  - port: 9300
    targetPort: 9300
    protocol: TCP
    name: transport
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: mimir-logging
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - port: 9200
    targetPort: 9200
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging